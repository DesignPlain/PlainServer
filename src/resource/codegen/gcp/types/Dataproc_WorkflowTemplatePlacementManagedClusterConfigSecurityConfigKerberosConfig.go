package types

type Dataproc_WorkflowTemplatePlacementManagedClusterConfigSecurityConfigKerberosConfig struct {
	// The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
	CrossRealmTrustAdminServer string `json:"crossRealmTrustAdminServer,omitempty" yaml:"crossRealmTrustAdminServer,omitempty"`

	// The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.
	Realm string `json:"realm,omitempty" yaml:"realm,omitempty"`

	// The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used.
	TgtLifetimeHours int `json:"tgtLifetimeHours,omitempty" yaml:"tgtLifetimeHours,omitempty"`

	// The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.
	TruststorePassword string `json:"truststorePassword,omitempty" yaml:"truststorePassword,omitempty"`

	// The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
	CrossRealmTrustKdc string `json:"crossRealmTrustKdc,omitempty" yaml:"crossRealmTrustKdc,omitempty"`

	// The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.
	CrossRealmTrustRealm string `json:"crossRealmTrustRealm,omitempty" yaml:"crossRealmTrustRealm,omitempty"`

	// The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
	KdcDbKey string `json:"kdcDbKey,omitempty" yaml:"kdcDbKey,omitempty"`

	// The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.
	KeyPassword string `json:"keyPassword,omitempty" yaml:"keyPassword,omitempty"`

	// The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship.
	CrossRealmTrustSharedPassword string `json:"crossRealmTrustSharedPassword,omitempty" yaml:"crossRealmTrustSharedPassword,omitempty"`

	// The uri of the KMS key used to encrypt various sensitive files.
	KmsKey string `json:"kmsKey,omitempty" yaml:"kmsKey,omitempty"`

	// Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster.
	EnableKerberos bool `json:"enableKerberos,omitempty" yaml:"enableKerberos,omitempty"`

	// The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
	Keystore string `json:"keystore,omitempty" yaml:"keystore,omitempty"`

	// The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc.
	KeystorePassword string `json:"keystorePassword,omitempty" yaml:"keystorePassword,omitempty"`

	// The Cloud Storage URI of a KMS encrypted file containing the root principal password.
	RootPrincipalPassword string `json:"rootPrincipalPassword,omitempty" yaml:"rootPrincipalPassword,omitempty"`

	// The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
	Truststore string `json:"truststore,omitempty" yaml:"truststore,omitempty"`
}
