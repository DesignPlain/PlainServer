package lambda

type Permission struct {
	// The Event Source Token to validate.  Used with [Alexa Skills](https://developer.amazon.com/docs/custom-skills/host-a-custom-skill-as-an-aws-lambda-function.html#use-aws-cli).
	EventSourceToken string `json:"eventSourceToken,omitempty" yaml:"eventSourceToken,omitempty"`

	// Name of the Lambda function whose resource policy you are updating
	Function string `json:"function,omitempty" yaml:"function,omitempty"`

	// The principal who is getting this permission e.g., `s3.amazonaws.com`, an AWS account ID, or AWS IAM principal, or AWS service principal such as `events.amazonaws.com` or `sns.amazonaws.com`.
	Principal string `json:"principal,omitempty" yaml:"principal,omitempty"`

	/*
	   The identifier for your organization in AWS Organizations. Use this to grant permissions to all the AWS accounts under this organization.

	   [1]: https://developer.amazon.com/docs/custom-skills/host-a-custom-skill-as-an-aws-lambda-function.html#use-aws-cli
	   [2]: https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html
	   [3]: https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html
	*/
	PrincipalOrgId string `json:"principalOrgId,omitempty" yaml:"principalOrgId,omitempty"`

	// This parameter is used when allowing cross-account access, or for S3 and SES. The AWS account ID (without a hyphen) of the source owner.
	SourceAccount string `json:"sourceAccount,omitempty" yaml:"sourceAccount,omitempty"`

	/*
	   When the principal is an AWS service, the ARN of the specific resource within that service to grant permission to.
	   Without this, any resource from `principal` will be granted permission â€“ even if that resource is from another account.
	   For S3, this should be the ARN of the S3 Bucket.
	   For EventBridge events, this should be the ARN of the EventBridge Rule.
	   For API Gateway, this should be the ARN of the API, as described [here](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html).
	*/
	SourceArn string `json:"sourceArn,omitempty" yaml:"sourceArn,omitempty"`

	// A statement identifier prefix. The provider will generate a unique suffix. Conflicts with `statement_id`.
	StatementIdPrefix string `json:"statementIdPrefix,omitempty" yaml:"statementIdPrefix,omitempty"`

	// The AWS Lambda action you want to allow in this statement. (e.g., `lambda:InvokeFunction`)
	Action string `json:"action,omitempty" yaml:"action,omitempty"`

	// Lambda Function URLs [authentication type](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html). Valid values are: `AWS_IAM` or `NONE`. Only supported for `lambda:InvokeFunctionUrl` action.
	FunctionUrlAuthType string `json:"functionUrlAuthType,omitempty" yaml:"functionUrlAuthType,omitempty"`

	// Query parameter to specify function version or alias name. The permission will then apply to the specific qualified ARN e.g., `arn:aws:lambda:aws-region:acct-id:function:function-name:2`
	Qualifier string `json:"qualifier,omitempty" yaml:"qualifier,omitempty"`

	// A unique statement identifier. By default generated by the provider.
	StatementId string `json:"statementId,omitempty" yaml:"statementId,omitempty"`
}
